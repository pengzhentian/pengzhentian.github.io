<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Spring Data JPA多表查询和复杂查询</title>
    <url>/2019/10/28/Spring-Data-JPA%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%E5%92%8C%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<p>Spring Data JPA中几种查询方式</p>
<ol>
<li>动态查询</li>
<li>多表查询<ul>
<li>一对多</li>
<li>多对一</li>
</ul>
</li>
<li>对象导航图查询<a id="more"></a>
<h3 id="基于Specification的动态查询"><a href="#基于Specification的动态查询" class="headerlink" title="基于Specification的动态查询"></a>基于Specification的动态查询</h3></li>
</ol>
<ul>
<li><p><code>JpaSpecificationExecutor</code>方法列表</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">JpaSpecificationExecutor</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">   	<span class="comment">//根据条件查询一个对象</span></span><br><span class="line"> 	<span class="function">T <span class="title">findOne</span><span class="params">(Specification&lt;T&gt; spec)</span></span>;	</span><br><span class="line">   	<span class="comment">//根据条件查询集合</span></span><br><span class="line"> 	<span class="function">List&lt;T&gt; <span class="title">findAll</span><span class="params">(Specification&lt;T&gt; spec)</span></span>;</span><br><span class="line">   	<span class="comment">//根据条件分页查询</span></span><br><span class="line"> 	<span class="function">Page&lt;T&gt; <span class="title">findAll</span><span class="params">(Specification&lt;T&gt; spec, Pageable pageable)</span></span>;</span><br><span class="line">   	<span class="comment">//排序查询查询</span></span><br><span class="line"> 	<span class="function">List&lt;T&gt; <span class="title">findAll</span><span class="params">(Specification&lt;T&gt; spec, Sort sort)</span></span>;</span><br><span class="line">   	<span class="comment">//统计查询</span></span><br><span class="line"> 	<span class="function"><span class="keyword">long</span> <span class="title">count</span><span class="params">(Specification&lt;T&gt; spec)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>Specification</code>接口中方法</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="comment">//构造查询条件</span></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">*	root	：Root接口，代表查询的根对象，可以通过root获取实体中的属性</span></span><br><span class="line"><span class="comment">   *	query	：代表一个顶层查询对象，用来自定义查询</span></span><br><span class="line"><span class="comment">   *	cb		：用来构建查询，此对象里有很多条件方法</span></span><br><span class="line"><span class="comment">   **/</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;T&gt; root, CriteriaQuery&lt;?&gt; query, CriteriaBuilder cb)</span></span>;</span><br></pre></td></tr></table></figure>

<ul>
<li><p><code>CriteriaBuilder</code>方法对应关系</p>
<table>
<thead>
<tr>
<th>方法名称</th>
<th>Sql对应关系</th>
</tr>
</thead>
<tbody><tr>
<td>equle</td>
<td>filed =   value</td>
</tr>
<tr>
<td>gt（greaterThan ）</td>
<td>filed   &gt; value</td>
</tr>
<tr>
<td>lt（lessThan ）</td>
<td>filed   &lt; value</td>
</tr>
<tr>
<td>ge（greaterThanOrEqualTo ）</td>
<td>filed   &gt;= value</td>
</tr>
<tr>
<td>le（ lessThanOrEqualTo）</td>
<td>filed   &lt;= value</td>
</tr>
<tr>
<td>notEqule</td>
<td>filed   != value</td>
</tr>
<tr>
<td>like</td>
<td>filed   like value</td>
</tr>
<tr>
<td>notLike</td>
<td>filed   not like value</td>
</tr>
</tbody></table>
</li>
</ul>
</li>
</ul>
<h4 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h4><ol>
<li><p>单条件查询</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindOne</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Specification&lt;Customer&gt; spec = <span class="keyword">new</span> Specification&lt;Customer&gt;() &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">        *</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> root              获取查询的对象属性</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> criteriaBuilder   构建查询条件，内部封装了查询条件（模糊匹配，精准匹配）</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Customer&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">            Path&lt;Object&gt; custName = root.get(<span class="string">"custName"</span>);</span><br><span class="line">            Predicate predicate = criteriaBuilder.equal(custName, <span class="string">"测试数据4"</span>);</span><br><span class="line">            <span class="keyword">return</span> predicate;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    Customer customer = customerDao.findOne(spec);</span><br><span class="line">    System.out.println(customer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>多条件拼接查询</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAnd</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Customer customer = customerDao.findOne(<span class="keyword">new</span> Specification&lt;Customer&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Customer&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                Path&lt;Object&gt; custName = root.get(<span class="string">"custName"</span>);</span><br><span class="line">                Path&lt;Object&gt; custId = root.get(<span class="string">"custId"</span>);</span><br><span class="line">                Predicate equal = criteriaBuilder.equal(custId, <span class="number">2L</span>);</span><br><span class="line">                Predicate like = criteriaBuilder.like(custName.as(String.class), <span class="string">"测试数据%"</span>);</span><br><span class="line">                Predicate and = criteriaBuilder.and(equal, like);</span><br><span class="line">                <span class="keyword">return</span> and;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        System.out.println(customer);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h4 id="排序查找"><a href="#排序查找" class="headerlink" title="排序查找"></a>排序查找</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSort</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        构造函数参数：</span></span><br><span class="line"><span class="comment">            1. 排序顺序</span></span><br><span class="line"><span class="comment">                Sort.Direction.DESC</span></span><br><span class="line"><span class="comment">                Sort.Direction.ASC</span></span><br><span class="line"><span class="comment">            2. 排序的属性名称</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    Sort sort = <span class="keyword">new</span> Sort(Sort.Direction.DESC, <span class="string">"custId"</span>);</span><br><span class="line">    List&lt;Customer&gt; list = customerDao.findAll(<span class="keyword">new</span> Specification&lt;Customer&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Customer&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">            Path&lt;Object&gt; custName = root.get(<span class="string">"custName"</span>);</span><br><span class="line">            Predicate predicate = criteriaBuilder.like(custName.as(String.class), <span class="string">"%测试数据%"</span>);</span><br><span class="line">            <span class="keyword">return</span> predicate;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, sort);</span><br><span class="line">    <span class="keyword">for</span> (Customer customer : list) &#123;</span><br><span class="line">        System.out.println(customer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="分页查找"><a href="#分页查找" class="headerlink" title="分页查找"></a>分页查找</h4><ul>
<li><p><strong>分页参数：</strong><code>Pageable</code>接口</p>
<ul>
<li>实现类<code>PageRequest</code><ul>
<li>构造函数参数（页码，每页查询条数）</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>返回值：</strong><code>Page</code>，Spring Data JPA提供的pageBean对象</p>
<ul>
<li><p>常用方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取总页数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getTotalPages</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//获取总记录数	</span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="title">getTotalElements</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//获取列表数据</span></span><br><span class="line"><span class="function">List&lt;T&gt; <span class="title">getContent</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Pageable pageable = <span class="keyword">new</span> PageRequest(<span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment">//Page&lt;Customer&gt; page = customerDao.findAll(spec,pageable);</span></span><br><span class="line">Page&lt;Customer&gt; page = customerDao.findAll(pageable);</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ul>
<h3 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h3><h4 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h4><ul>
<li><p>实体类配置</p>
<ol>
<li><p><strong>@OneToMany:</strong></p>
<ol>
<li><p>作用：建立一对多的关系映射</p>
</li>
<li><p>属性：</p>
<ul>
<li><p>targetEntityClass：指定多的多方的类的字节码</p>
</li>
<li><p>mappedBy：指定从表实体类中引用主表对象的名称。</p>
</li>
<li><p>cascade：指定要使用的级联操作</p>
</li>
<li><p>fetch：指定是否采用延迟加载</p>
</li>
<li><p>orphanRemoval：是否使用孤儿删除</p>
</li>
</ul>
</li>
</ol>
</li>
<li><p><strong>@ManyToOne</strong></p>
<ol>
<li><p>作用：建立多对一的关系</p>
</li>
<li><p>属性：</p>
<ul>
<li><p>targetEntityClass：指定一的一方实体类字节码</p>
</li>
<li><p>cascade：指定要使用的级联操作</p>
</li>
<li><p>fetch：指定是否采用延迟加载</p>
</li>
<li><p>optional：关联是否可选。如果设置为false，则必须始终存在非空关系。</p>
</li>
</ul>
</li>
</ol>
</li>
<li><p><strong>@JoinColumn</strong></p>
<ol>
<li><p>作用：用于定义主键字段和外键字段的对应关系。   </p>
</li>
<li><p>属性：</p>
<ul>
<li><p>name：指定外键字段的名称</p>
</li>
<li><p>referencedColumnName：指定引用主表的主键字段名称</p>
</li>
<li><p>unique：是否唯一。默认值不唯一</p>
</li>
<li><p>nullable：是否允许为空。默认值允许。</p>
</li>
<li><p>insertable：是否允许插入。默认值允许。</p>
</li>
<li><p>updatable：是否允许更新。默认值允许。</p>
</li>
<li><p>columnDefinition：列的定义信息。</p>
</li>
</ul>
</li>
</ol>
</li>
<li><p>主表-客户表（一）</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"cst_customer"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Customer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"cust_id"</span>)</span><br><span class="line">    <span class="keyword">private</span> Long custId;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"cust_name"</span>)</span><br><span class="line">    <span class="keyword">private</span> String custName;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"cust_source"</span>)</span><br><span class="line">    <span class="keyword">private</span> String custSource;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"cust_industry"</span>)</span><br><span class="line">    <span class="keyword">private</span> String custIndustry;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"cust_level"</span>)</span><br><span class="line">    <span class="keyword">private</span> String custLevel;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"cust_address"</span>)</span><br><span class="line">    <span class="keyword">private</span> String custAddress;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"cust_phone"</span>)</span><br><span class="line">    <span class="keyword">private</span> String custPhone;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    1. 声明关系</span></span><br><span class="line"><span class="comment">    2. 配置外键（中间表）</span></span><br><span class="line"><span class="comment">        虽然配置了外键，但最终还是体现在从表中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@OneToMany</span>(targetEntity = LinkMan.class)</span><br><span class="line">    <span class="meta">@JoinColumn</span>(name = <span class="string">"lkm_cust_id"</span>,referencedColumnName = <span class="string">"cust_id"</span>)</span><br><span class="line"><span class="comment">//    @OneToMany(mappedBy = "customer",cascade =CascadeType.ALL)</span></span><br><span class="line">    <span class="keyword">private</span> Set&lt;LinkMan&gt; linkMans = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>从表-联系人表（多）</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"cst_linkman"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkMan</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"lkm_id"</span>)</span><br><span class="line">    <span class="keyword">private</span> Long lkmId;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"lkm_name"</span>)</span><br><span class="line">    <span class="keyword">private</span> String lkmName;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"lkm_gender"</span>)</span><br><span class="line">    <span class="keyword">private</span> String lkmGender;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"lkm_phone"</span>)</span><br><span class="line">    <span class="keyword">private</span> String lkmPhone;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"lkm_mobile"</span>)</span><br><span class="line">    <span class="keyword">private</span> String lkmMobile;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"lkm_email"</span>)</span><br><span class="line">    <span class="keyword">private</span> String lkmEmail;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"lkm_position"</span>)</span><br><span class="line">    <span class="keyword">private</span> String lkmPosition;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"lkm_memo"</span>)</span><br><span class="line">    <span class="keyword">private</span> String lkmMemo;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne</span>(targetEntity = Customer.class)</span><br><span class="line">    <span class="meta">@JoinColumn</span>(name = <span class="string">"lkm_cust_id"</span>,referencedColumnName = <span class="string">"cust_id"</span>)</span><br><span class="line">    <span class="keyword">private</span> Customer customer;</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
<li><p>（主表）放弃外键维护</p>
<ol>
<li><p>主表维护保存数据时，执行2条insert语句，1条update语句</p>
</li>
<li><p>从表维护执行两条insert语句，在保存时已经对外键赋值</p>
<ul>
<li><p>修改</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//	  @OneToMany(targetEntity = LinkMan.class)</span></span><br><span class="line"><span class="comment">//    @JoinColumn(name = "lkm_cust_id",referencedColumnName = "cust_id")</span></span><br><span class="line">    <span class="meta">@OneToMany</span>(mappedBy = <span class="string">"customer"</span>,cascade =CascadeType.PERSIST)</span><br><span class="line">    <span class="keyword">private</span> Set&lt;LinkMan&gt; linkMans = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="meta">@Transactional</span></span><br><span class="line">   <span class="meta">@Rollback</span>(<span class="keyword">false</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAdd</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">       Customer customer = <span class="keyword">new</span> Customer();</span><br><span class="line">       customer.setCustName(<span class="string">"用户1"</span>);</span><br><span class="line">       customer.setCustAddress(<span class="string">"北京"</span>);</span><br><span class="line"></span><br><span class="line">       LinkMan linkMan = <span class="keyword">new</span> LinkMan();</span><br><span class="line">       linkMan.setLkmName(<span class="string">"小明"</span>);</span><br><span class="line">       linkMan.setLkmPosition(<span class="string">"老板"</span>);</span><br><span class="line"></span><br><span class="line">       customer.getLinkMans().add(linkMan);</span><br><span class="line">       linkMan.setCustomer(customer);</span><br><span class="line"></span><br><span class="line">       customerDao.save(customer);</span><br><span class="line">       linkManDao.save(linkMan);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
</li>
<li><p>（主表）设置级联操作</p>
<ul>
<li><p>操作一个对象同时操作它的关联对象</p>
</li>
<li><p><code>@OneToMany</code>注解<code>cascade</code>属性：指定要执行的级联操作</p>
<ul>
<li><p><code>CascadeType.ALL</code></p>
</li>
<li><p><code>CascadeType.PERSIST</code></p>
</li>
<li><p><code>CascadeType.DETACH</code></p>
</li>
<li><p><code>CascadeType.MERGE</code></p>
</li>
<li><p><code>CascadeType.REFRESH</code></p>
</li>
<li><p><code>CascadeType.REMOVE</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Rollback</span>(<span class="keyword">false</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCascade</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        级联添加</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">    Customer customer = <span class="keyword">new</span> Customer();</span><br><span class="line">    customer.setCustName(<span class="string">"用户1"</span>);</span><br><span class="line">    customer.setCustAddress(<span class="string">"北京"</span>);</span><br><span class="line"></span><br><span class="line">    LinkMan linkMan = <span class="keyword">new</span> LinkMan();</span><br><span class="line">    linkMan.setLkmName(<span class="string">"小明"</span>);</span><br><span class="line">    linkMan.setLkmPosition(<span class="string">"老板"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置关联关系</span></span><br><span class="line">    linkMan.setCustomer(customer);</span><br><span class="line">    customer.getLinkMans().add(linkMan);</span><br><span class="line"></span><br><span class="line">    customerDao.save(customer);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h4><ul>
<li><p>实体类配置</p>
<ol>
<li><p><strong>@ManyToMany</strong></p>
<ol>
<li><p>作用：用于映射多对多关系</p>
</li>
<li><p>属性：cascade：配置级联操作。</p>
<ul>
<li><p>fetch：配置是否采用延迟加载。</p>
</li>
<li><p>targetEntity：配置目标的实体类。映射多对多的时候不用写。</p>
</li>
</ul>
</li>
</ol>
</li>
<li><p><strong>@JoinTable</strong></p>
<ol>
<li><p>作用：针对中间表的配置</p>
</li>
<li><p>属性：</p>
<ul>
<li><p>nam：配置中间表的名称</p>
</li>
<li><p>joinColumns：中间表的外键字段关联当前实体类所对应表的主键字段                                                  </p>
</li>
<li><p>inverseJoinColumn：中间表的外键字段关联对方表的主键字段<br>​             </p>
</li>
</ul>
</li>
</ol>
</li>
<li><p><strong>@JoinColumn</strong></p>
<ol>
<li><p>作用：用于定义主键字段和外键字段的对应关系。</p>
</li>
<li><p>属性：</p>
<ul>
<li><p>name：指定外键字段的名称</p>
</li>
<li><p>referencedColumnName：指定引用主表的主键字段名称</p>
</li>
<li><p>unique：是否唯一。默认值不唯一</p>
</li>
<li><p>nullable：是否允许为空。默认值允许。</p>
</li>
<li><p>insertable：是否允许插入。默认值允许。</p>
</li>
<li><p>updatable：是否允许更新。默认值允许。</p>
</li>
<li><p>columnDefinition：列的定义信息。</p>
</li>
</ul>
</li>
</ol>
</li>
<li><p>用户表</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"sys_user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"user_id"</span>)</span><br><span class="line">    <span class="keyword">private</span> Long userId;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"user_name"</span>)</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"age"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToMany</span>(targetEntity = Role.class,cascade = CascadeType.REMOVE,fetch = FetchType.LAZY)</span><br><span class="line">    <span class="comment">//中间表配置</span></span><br><span class="line">    <span class="meta">@JoinTable</span>(name = <span class="string">"sys_user_role"</span>,</span><br><span class="line">            <span class="comment">//当前对象在中间表中的外键</span></span><br><span class="line">            joinColumns = &#123;<span class="meta">@JoinColumn</span>(name = <span class="string">"sys_user_id"</span>, referencedColumnName = <span class="string">"user_id"</span>)&#125;,</span><br><span class="line">            <span class="comment">//对方对象在中间表中的外键</span></span><br><span class="line">            inverseJoinColumns = &#123;<span class="meta">@JoinColumn</span>(name = <span class="string">"sys_role_id"</span>,referencedColumnName = <span class="string">"role_id"</span>)&#125;)</span><br><span class="line">    <span class="keyword">private</span> Set&lt;Role&gt; roles = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>角色表</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"sys_role"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Role</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"role_id"</span>)</span><br><span class="line">    <span class="keyword">private</span> Long roleId;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"role_name"</span>)</span><br><span class="line">    <span class="keyword">private</span> String roleName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToMany</span>(targetEntity = User.class)</span><br><span class="line">    <span class="meta">@JoinTable</span>(name = <span class="string">"sys_user_role"</span>,</span><br><span class="line">            joinColumns = &#123;<span class="meta">@JoinColumn</span>(name = <span class="string">"sys_role_id"</span>, referencedColumnName = <span class="string">"role_id"</span>)&#125;,</span><br><span class="line">            inverseJoinColumns = <span class="meta">@JoinColumn</span>(name = <span class="string">"sys_user_id"</span>, referencedColumnName = <span class="string">"user_id"</span>))</span><br><span class="line"><span class="comment">//    @ManyToMany(mappedBy = "roles")</span></span><br><span class="line">    <span class="keyword">private</span> Set&lt;User&gt; users = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
<li><p>（被动方）放弃外键维护</p>
</li>
<li><p>（主动方）级联操作</p>
</li>
</ul>
<h4 id="对象导航图查询"><a href="#对象导航图查询" class="headerlink" title="对象导航图查询"></a>对象导航图查询</h4><h5 id="一对多-1"><a href="#一对多-1" class="headerlink" title="一对多"></a>一对多</h5><ul>
<li><p>默认为延迟加载</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFind</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Customer customer = customerDao.findOne(<span class="number">5l</span>);</span><br><span class="line">    Set&lt;LinkMan&gt; linkMans = customer.getLinkMans();<span class="comment">//对象导航查询</span></span><br><span class="line">    <span class="keyword">for</span>(LinkMan linkMan : linkMans) &#123;</span><br><span class="line">        System.out.println(linkMan);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h5 id="多对一"><a href="#多对一" class="headerlink" title="多对一"></a>多对一</h5><ul>
<li><p>默认为立即加载</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFind</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    LinkMan linkMan = linkManDao.findOne(<span class="number">4l</span>);</span><br><span class="line">    Customer customer = linkMan.getCustomer(); <span class="comment">//对象导航查询</span></span><br><span class="line">    System.out.println(customer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h5 id="使用Specification查询"><a href="#使用Specification查询" class="headerlink" title="使用Specification查询"></a>使用Specification查询</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFind</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Specification&lt;LinkMan&gt; spec = <span class="keyword">new</span> Specification&lt;LinkMan&gt;() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;LinkMan&gt; root, CriteriaQuery&lt;?&gt; query, CriteriaBuilder cb)</span> </span>&#123;</span><br><span class="line">            <span class="comment">//Join代表链接查询，通过root对象获取</span></span><br><span class="line">            <span class="comment">//创建的过程中，第一个参数为关联对象的属性名称，第二个参数为连接查询的方式（left，inner，right）</span></span><br><span class="line">            <span class="comment">//JoinType.LEFT : 左外连接,JoinType.INNER：内连接,JoinType.RIGHT：右外连接</span></span><br><span class="line">            Join&lt;LinkMan, Customer&gt; join = root.join(<span class="string">"customer"</span>,JoinType.INNER);</span><br><span class="line">            <span class="keyword">return</span> cb.like(join.get(<span class="string">"custName"</span>).as(String.class),<span class="string">"传智播客1"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    List&lt;LinkMan&gt; list = linkManDao.findAll(spec);</span><br><span class="line">    <span class="keyword">for</span> (LinkMan linkMan : list) &#123;</span><br><span class="line">        System.out.println(linkMan);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Spring Data JPA</category>
      </categories>
      <tags>
        <tag>动态查询</tag>
        <tag>多表查询</tag>
        <tag>对象图导航查询</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Data JPA基本查询</title>
    <url>/2019/10/27/Spring-Data-JPA%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<p>Spring Data JPA分别使用接口中方法，JPQL，原生SQL和根据方法命名规则的方法实现基本的CRUD操作<br>主要内容<br>    1. 依赖导入<br>    2. Spring配置文件编写<br>    3. 数据表映射的实体类<br>    4. 持久层接口的编写</p>
<a id="more"></a>
<h3 id="Spring-Data-JPA与JPA-hibernate之间的关系"><a href="#Spring-Data-JPA与JPA-hibernate之间的关系" class="headerlink" title="Spring Data JPA与JPA,hibernate之间的关系"></a>Spring Data JPA与JPA,hibernate之间的关系</h3><p><img src="relationship.jpg" alt=""></p>
<h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><ul>
<li>IOC</li>
<li>AOP</li>
<li>Spring Data JPA<ul>
<li>el</li>
</ul>
</li>
<li>ORM<ul>
<li><strong><em>ORM依赖tx jar包，事务相关依赖可能存在jar包冲突</em></strong></li>
</ul>
</li>
<li>hibernate</li>
<li>log4j</li>
<li>mysql驱动</li>
<li>c3p0</li>
<li>test<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.0.2.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>5.1.6<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hibernate.version</span>&gt;</span>5.0.7.Final<span class="tag">&lt;/<span class="name">hibernate.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">slf4j.version</span>&gt;</span>1.6.6<span class="tag">&lt;/<span class="name">slf4j.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">log4j.version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">log4j.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- IOC --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- AOP --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring data jpa --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.data<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring data jpa el --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.el<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.el-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.glassfish.web<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.el<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- ORM --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-orm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- hibernate --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;hibernate.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-entitymanager<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;hibernate.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.1.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- mysql --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- c3po --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- log --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="Spring整合Spring-Data-JPA配置"><a href="#Spring整合Spring-Data-JPA配置" class="headerlink" title="Spring整合Spring Data JPA配置"></a>Spring整合Spring Data JPA配置</h3><ul>
<li>applicationContext.xml<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:jdbc</span>=<span class="string">"http://www.springframework.org/schema/jdbc"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:jpa</span>=<span class="string">"http://www.springframework.org/schema/data/jpa"</span> <span class="attr">xmlns:task</span>=<span class="string">"http://www.springframework.org/schema/task"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/data/jpa</span></span></span><br><span class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 实体管理器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"entityManagerFactory"</span> <span class="attr">class</span>=<span class="string">"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 数据源 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 扫描的包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"packagesToScan"</span> <span class="attr">value</span>=<span class="string">"cn.itcast.domain"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- JPA实现方式 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"persistenceProvider"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.hibernate.jpa.HibernatePersistenceProvider"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- JPA供应商适配器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jpaVendorAdapter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 数据库类型 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"database"</span> <span class="attr">value</span>=<span class="string">"MYSQL"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 是否显示SQl语句 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"showSql"</span> <span class="attr">value</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 是否创建数据库表 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"generateDdl"</span> <span class="attr">value</span>=<span class="string">"false"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 数据库方言 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"databasePlatform"</span> <span class="attr">value</span>=<span class="string">"org.hibernate.dialect.MySQLDialect"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置hibernate其他属性 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jpaProperties"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.format_sql"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.mchange.v2.c3p0.ComboPooledDataSource"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClass"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcUrl"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/jpa"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">value</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 事物管理器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.orm.jpa.JpaTransactionManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"entityManagerFactory"</span> <span class="attr">ref</span>=<span class="string">"entityManagerFactory"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 整合Spring Data Jpa --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jpa:repositories</span> <span class="attr">base-package</span>=<span class="string">"cn.itcast.dao"</span> <span class="attr">entity-manager-factory-ref</span>=<span class="string">"entityManagerFactory"</span></span></span><br><span class="line"><span class="tag">                      <span class="attr">transaction-manager-ref</span>=<span class="string">"transactionManager"</span>&gt;</span><span class="tag">&lt;/<span class="name">jpa:repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 事务通知 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"txAdvice"</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"save*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"insert*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"update*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"delete*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"get*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"find*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- AOP --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"pt1"</span> <span class="attr">expression</span>=<span class="string">"execution(* cn.itcast.service.impl.*.*(..))"</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:pointcut</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"txAdvice"</span> <span class="attr">pointcut-ref</span>=<span class="string">"pt1"</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:advisor</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 扫描的包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"cn.itcast"</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"cst_customer"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Customer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"cust_id"</span>)</span><br><span class="line">    <span class="keyword">private</span> Long custId;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"cust_name"</span>)</span><br><span class="line">    <span class="keyword">private</span> String custName;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"cust_source"</span>)</span><br><span class="line">    <span class="keyword">private</span> String custSource;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"cust_industry"</span>)</span><br><span class="line">    <span class="keyword">private</span> String custIndustry;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"cust_level"</span>)</span><br><span class="line">    <span class="keyword">private</span> String custLevel;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"cust_address"</span>)</span><br><span class="line">    <span class="keyword">private</span> String custAddress;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"cust_phone"</span>)</span><br><span class="line">    <span class="keyword">private</span> String custPhone;</span><br><span class="line">    <span class="comment">//省略get,set方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="dao层接口"><a href="#dao层接口" class="headerlink" title="dao层接口"></a>dao层接口</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CustomerDao</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Customer</span>,<span class="title">Long</span>&gt;,<span class="title">JpaSpecificationExecutor</span>&lt;<span class="title">Customer</span>&gt; </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="基本CRUD"><a href="#基本CRUD" class="headerlink" title="基本CRUD"></a>基本CRUD</h3></li>
</ul>
<ol>
<li><code>findOne(id)</code>：根据id进行查询</li>
<li><code>save(Object)</code>：保存或者更新<ol>
<li>对象无<code>id</code>属性：保存</li>
<li>对象有id属性：首先进行一次查询<ul>
<li>有值：进行更新</li>
<li>无值：添加</li>
</ul>
</li>
</ol>
</li>
<li><code>delete(id)</code>：根据id删除</li>
<li><code>findAll()</code>：查询全部</li>
</ol>
<h3 id="复杂查询"><a href="#复杂查询" class="headerlink" title="复杂查询"></a>复杂查询</h3><h4 id="通过接口中已定义方法"><a href="#通过接口中已定义方法" class="headerlink" title="通过接口中已定义方法"></a>通过接口中已定义方法</h4><ol>
<li><code>getOne(id)</code>：查询（<strong>延迟加载</strong>）</li>
<li><code>count()</code></li>
<li><code>exists()</code></li>
</ol>
<h4 id="JPQL语句"><a href="#JPQL语句" class="headerlink" title="JPQL语句"></a>JPQL语句</h4><ol>
<li><p>查询</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Query</span>(value = <span class="string">"from Customer where custName = ?"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Customer <span class="title">findByName</span><span class="params">(String custName)</span></span>;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>多占位符时变量的赋值</p>
<ol>
<li><p>参数顺序与占位符顺序保持一致</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Query</span>(value = <span class="string">"from Customer where custName = ? and custId = ?"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Customer <span class="title">findByNameAndId</span><span class="params">(Long custName,String custId)</span></span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>占位符后添加索引</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Query</span>(value = <span class="string">"from Customer where custName = ?2 and custId = ?1"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Customer <span class="title">findByNameAndId</span><span class="params">(Long custId,String custName)</span></span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用注解</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Query</span>(value = <span class="string">"from Customer where custName = :custName and custId = :custId"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Customer <span class="title">findByNameAndId</span><span class="params">(@Param(<span class="string">"custId"</span>)</span>Long custId,@<span class="title">Param</span><span class="params">(<span class="string">"custName"</span>)</span>String custName)</span>;</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
</ul>
</li>
<li><p>添加</p>
<ul>
<li><p>需要使用注解<code>@Modifying</code></p>
</li>
<li><p>需要事务支持</p>
</li>
<li><p>需设置不自动回滚</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Modifying</span><span class="meta">@Query</span>(value = <span class="string">"update Customer set custName = ? where custId = ?"</span>)</span><br><span class="line"><span class="meta">@Modifying</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">( String custName, Long custId)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Rollback</span>(value = <span class="keyword">false</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJpqlUpdate</span><span class="params">()</span></span>&#123;</span><br><span class="line">    customerDao.update(<span class="string">"测试数据4"</span>,<span class="number">2L</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>删除</p>
<ul>
<li><p>对比添加时，注解，事务，回滚可写可不写</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Query</span>(value = <span class="string">"delete from Customer where custId = ?"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(String custId)</span></span>;</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ol>
<h4 id="原生SQL语句"><a href="#原生SQL语句" class="headerlink" title="原生SQL语句"></a>原生SQL语句</h4><ul>
<li><code>@Query</code>注解<code>nativeQuery</code>属性设置为<code>true</code></li>
</ul>
<ol>
<li><p>查询</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Query</span>(value = <span class="string">"select * from cst_customer"</span>,nativeQuery = <span class="keyword">true</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Customer&gt; <span class="title">findBySql</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Query</span>(value = <span class="string">"select * from cst_customer where cust_name like ?"</span>,nativeQuery = <span class="keyword">true</span>)</span><br><span class="line"><span class="keyword">public</span> List&lt;Object[]&gt; findBySqlWithName(String custName);</span><br></pre></td></tr></table></figure>
</li>
<li><p>更新</p>
<ul>
<li><p>事务支持</p>
</li>
<li><p>设置不自动回滚</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Query</span>(value = <span class="string">"select * from cst_customer"</span>,nativeQuery = <span class="keyword">true</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Customer&gt; <span class="title">findBySql</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query</span>(value = <span class="string">"select * from cst_customer where cust_name like ?"</span>,nativeQuery = <span class="keyword">true</span>)</span><br><span class="line">    <span class="keyword">public</span> List&lt;Object[]&gt; findBySqlWithName(String custName);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query</span>(value = <span class="string">"update cst_customer set cust_name = ? where cust_id = ?"</span>,nativeQuery = <span class="keyword">true</span>)</span><br><span class="line">    <span class="meta">@Modifying</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateCustomer</span><span class="params">( String custName, Long custId)</span></span>;</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ol>
<h4 id="方法名称规则查询"><a href="#方法名称规则查询" class="headerlink" title="方法名称规则查询"></a>方法名称规则查询</h4><ul>
<li>findBy + 属性名<ul>
<li>运行期解析：findBy –&gt; from 实体类；属性名 –&gt; where 属性 = ?</li>
</ul>
</li>
<li>findBy + 属性名 +查询方式（Like | IsNull）</li>
<li>命名规则表</li>
</ul>
<table>
<thead>
<tr>
<th><strong>Keyword</strong></th>
<th><strong>Sample</strong></th>
<th><strong>JPQL</strong></th>
</tr>
</thead>
<tbody><tr>
<td>And</td>
<td>findByLastnameAndFirstname</td>
<td>…   where x.lastname = ?1 and x.firstname = ?2</td>
</tr>
<tr>
<td>Or</td>
<td>findByLastnameOrFirstname</td>
<td>…   where x.lastname = ?1 or x.firstname = ?2</td>
</tr>
<tr>
<td>Is,Equals</td>
<td>findByFirstnameIs,   findByFirstnameEquals</td>
<td>…   where x.firstname = ?1</td>
</tr>
<tr>
<td>Between</td>
<td>findByStartDateBetween</td>
<td>…   where x.startDate between ?1 and ?2</td>
</tr>
<tr>
<td>LessThan</td>
<td>findByAgeLessThan</td>
<td>…   where x.age &lt; ?1</td>
</tr>
<tr>
<td>LessThanEqual</td>
<td>findByAgeLessThanEqual</td>
<td>…   where x.age ⇐ ?1</td>
</tr>
<tr>
<td>GreaterThan</td>
<td>findByAgeGreaterThan</td>
<td>…   where x.age &gt; ?1</td>
</tr>
<tr>
<td>GreaterThanEqual</td>
<td>findByAgeGreaterThanEqual</td>
<td>…   where x.age &gt;= ?1</td>
</tr>
<tr>
<td>After</td>
<td>findByStartDateAfter</td>
<td>…   where x.startDate &gt; ?1</td>
</tr>
<tr>
<td>Before</td>
<td>findByStartDateBefore</td>
<td>…   where x.startDate &lt; ?1</td>
</tr>
<tr>
<td>IsNull</td>
<td>findByAgeIsNull</td>
<td>…   where x.age is null</td>
</tr>
<tr>
<td>IsNotNull,NotNull</td>
<td>findByAge(Is)NotNull</td>
<td>…   where x.age not null</td>
</tr>
<tr>
<td>Like</td>
<td>findByFirstnameLike</td>
<td>…   where x.firstname like ?1</td>
</tr>
<tr>
<td>NotLike</td>
<td>findByFirstnameNotLike</td>
<td>… where   x.firstname not like ?1</td>
</tr>
<tr>
<td>StartingWith</td>
<td>findByFirstnameStartingWith</td>
<td>…   where x.firstname like ?1 (parameter bound with appended %)</td>
</tr>
<tr>
<td>EndingWith</td>
<td>findByFirstnameEndingWith</td>
<td>…   where x.firstname like ?1 (parameter bound with prepended %)</td>
</tr>
<tr>
<td>Containing</td>
<td>findByFirstnameContaining</td>
<td>…   where x.firstname like ?1 (parameter bound wrapped in %)</td>
</tr>
<tr>
<td>OrderBy</td>
<td>findByAgeOrderByLastnameDesc</td>
<td>…   where x.age = ?1 order by x.lastname desc</td>
</tr>
<tr>
<td>Not</td>
<td>findByLastnameNot</td>
<td>…   where x.lastname &lt;&gt; ?1</td>
</tr>
<tr>
<td>In</td>
<td>findByAgeIn(Collection ages)</td>
<td>…   where x.age in ?1</td>
</tr>
<tr>
<td>NotIn</td>
<td>findByAgeNotIn(Collection age)</td>
<td>…   where x.age not in ?1</td>
</tr>
<tr>
<td>TRUE</td>
<td>findByActiveTrue()</td>
<td>…   where x.active = true</td>
</tr>
<tr>
<td>FALSE</td>
<td>findByActiveFalse()</td>
<td>…   where x.active = false</td>
</tr>
<tr>
<td>IgnoreCase</td>
<td>findByFirstnameIgnoreCase</td>
<td>…   where UPPER(x.firstame) = UPPER(?1)</td>
</tr>
</tbody></table>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><ol>
<li>Dao接口继承<code>JpaRepository</code>和<code>JpaSpecificationExecutor</code></li>
<li>自动注入时注入的customerDao对象，本质上是通过<code>JdkDynamicAopProxy</code>生成的一个<strong>代理对象</strong></li>
<li><code>JdkDynamicAopProxy</code>的<code>invoke</code>方法，生成的代理对象为<code>SimpleJpaRepository</code></li>
<li><code>SimpleJpaRepository</code>中<code>findOne</code> –&gt; <code>EntityManager</code>的<code>find</code>方法，即标准JPA操作</li>
</ol>
]]></content>
      <categories>
        <category>Spring Data JPA</category>
      </categories>
      <tags>
        <tag>JPA</tag>
        <tag>JPQL</tag>
        <tag>Dao</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo待完成项</title>
    <url>/2019/10/25/%E5%BE%85%E5%AE%8C%E6%88%90%E9%A1%B9/</url>
    <content><![CDATA[<p>记录一些hexo博客未完成的功能以及需要优化的地方</p>
<a id="more"></a>
<h3 id="功能添加"><a href="#功能添加" class="headerlink" title="功能添加"></a>功能添加</h3><h4 id="集成评论系统"><a href="#集成评论系统" class="headerlink" title="集成评论系统"></a>集成评论系统</h4><h4 id="集成搜索引擎"><a href="#集成搜索引擎" class="headerlink" title="集成搜索引擎"></a>集成搜索引擎</h4><ul>
<li>sitemap<h4 id="网易云音乐集成"><a href="#网易云音乐集成" class="headerlink" title="网易云音乐集成"></a>网易云音乐集成</h4><h4 id="评论区功能集成"><a href="#评论区功能集成" class="headerlink" title="评论区功能集成"></a>评论区功能集成</h4><h4 id="访客量，访问次数添加"><a href="#访客量，访问次数添加" class="headerlink" title="访客量，访问次数添加"></a>访客量，访问次数添加</h4></li>
</ul>
<hr>
<h3 id="优化项"><a href="#优化项" class="headerlink" title="优化项"></a>优化项</h3><h4 id="侧边菜单显示博客数量"><a href="#侧边菜单显示博客数量" class="headerlink" title="侧边菜单显示博客数量"></a>侧边菜单显示博客数量</h4><h4 id="博文间距控制"><a href="#博文间距控制" class="headerlink" title="博文间距控制"></a>博文间距控制</h4><h4 id="解决文章阴影配置问题"><a href="#解决文章阴影配置问题" class="headerlink" title="解决文章阴影配置问题"></a>解决文章阴影配置问题</h4><p><img src="yyxg.jpg" alt="阴影效果图"></p>
<h4 id="字体修改"><a href="#字体修改" class="headerlink" title="字体修改"></a>字体修改</h4><ul>
<li>文章字体</li>
<li>行代码区字体<h4 id="鼠标点击爆炸效果实现"><a href="#鼠标点击爆炸效果实现" class="headerlink" title="鼠标点击爆炸效果实现"></a>鼠标点击爆炸效果实现</h4><h4 id="live2d模型添加"><a href="#live2d模型添加" class="headerlink" title="live2d模型添加"></a>live2d模型添加</h4><h4 id="边角弧度美化"><a href="#边角弧度美化" class="headerlink" title="边角弧度美化"></a>边角弧度美化</h4><img src="bjhd.jpg" alt="边角弧度"></li>
</ul>
<hr>
<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://inspurer.github.io/" target="_blank" rel="noopener">月小水长的个人博客</a><br><a href="https://blog.minhow.com/" target="_blank" rel="noopener">MinHow’s Blog</a><br><a href="https://www.ue4.ink/" target="_blank" rel="noopener">Jack_百岁山</a><br><a href="http://prozhuchen.github.io/" target="_blank" rel="noopener">朱琛</a><br><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">shenzekun</a><br><a href="https://www.jianshu.com/p/1ff2fcbdd155" target="_blank" rel="noopener">简书next进阶</a></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo个性化</tag>
      </tags>
  </entry>
</search>
